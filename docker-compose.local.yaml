services:
  postgresql:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB=${BASE_DB}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--locale=ko_KR.UTF-8
      - TZ=UTC
      - PGTZ=UTC
    ports:
      - "${DB_PORT}:5432"
  redis:
    image: redis:latest
    environment:
      - TZ=UTC
    networks:
      - redis-network
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
  redisinsight:
    image: redis/redisinsight:latest
    environment:
      - TZ=UTC
    networks:
      - redis-network
    ports:
      - "${REDIS_INSIGHT_PORT}:5540"
    volumes:
      - redis_insight_volume_data:/db
    depends_on:
      - redis

  # Prometheus 모니터링
  prometheus:
    image: prom/prometheus:latest
    container_name: resumate-prometheus
    environment:
      - TZ=Asia/Seoul
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring-network
    restart: unless-stopped

  # Grafana 대시보드
  grafana:
    image: grafana/grafana:latest
    container_name: resumate-grafana
    environment:
      - TZ=Asia/Seoul
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring-network
    depends_on:
      - prometheus
    restart: unless-stopped

  k6:
    image: grafana/k6
    container_name: k6
    volumes:
      - ./k6:/scripts     # k6 폴더 전체를 마운트
    working_dir: /scripts # 기본 작업 폴더를 /scripts로 지정
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  redis-network:
    driver: bridge
  monitoring-network:
    driver: bridge

volumes:
  redis_volume_data:
  redis_insight_volume_data:
  prometheus_data:
  grafana_data: